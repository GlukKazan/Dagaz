- partial отдаются модулю визуализации, но AI получает составной ход целиком
- В процессе игры конфигурация доски не изменяется, но в другой фазе (например при переключении переходов) игры может быть использована другая конфигурация (с автоматическим переносом фигур)
- Добавить режим хода в DSG-нотацию (имя хода + параметры уникальны в пределах режима)
- Должна быть возможность завершения игры несколькими различными способами (Шатар, Ритмомахия)
- Контроль повторения позиции не должен быть обязательным (Ур)
- is-attcked?, not-attacked?
  - Атакуемое поле не всегда совпадает с направлением перемещения (Coordinator в Ultima, Ритмомахия)
    - Поле, которое Coordinator может взять следующим ходом находится под атакой
  - Некоторые фигуры немедленно убивают любое количество фигур, попавших в заданную зону (Вьетнамские военные шахматы)
    - Если ход противником в контролируемую зону заканчивается снятием своей фигуры - контролируемая зона под атакой
    - Если атака действует немедленно после завершения своего хода, поля которые могут быть атакованы следующим ходом также под атакой (см. замечание об Ultima)
  - Результат вызова предиката может зависеть от фигуры, стоящей на целевом поле (Inversed Capturing Chess)
    - При выполнении проверки в процессе генерации хода (Рокировка):
      - Клонировать состояние
      - Установить на текущее поле фигуру указанного в предикате типа (или произвольную игрока, если тип не указан)
      - Проверить атаку вражескими фигурами (контролируемые зоны + ходы, приводящие к взятию на текущем поле)
      - Откатить состояние
    - При выполнении проверки инвариантов, указанная выше последовательность не нужна, поскольку состояние уже сформировано (ходом и ранее выполненными пост-действиями)
  - Фигуры могут быть атакованы и своими фигурами (Шашки-самоеды)
- В Шабел можно ставить мат королём, если противник должен брать другую фигуру шашкой
- В Шахматах Тамерлана может быть до 3 равноправных королей (первых двух надо съесть, последнему поставить мат)
! Реализовать вызов макроса из реализации другого макроса
- Реализовать "Мельницу"
  - Доска - произвольный граф
  - Проверка "3 в ряд" и последующее взятие фигуры противника - инварианты
  - Когда на доске осталось 3 фигуры - разрешается прыгать на любое пустое поле
    - Определить множественное исходящее направление "любое поле" (точка недетерминизма)
  - Контролировать не повторение "частичной позиции" (три в ряд) на заданную глубину ходов
    - Добавление произвольной фигуры в переменную - Zobrist hash
    - Фигуры мельницы могут быть индивидуальны (значения атрибутов)
    - Вставка хэша в список заданной глубины с проверкой
    - Не для "Мельницы": возсожность вставки в единый хэш из различных ветвей недетерминизма
      - Сбор в хэш инвариантом всех фигур на поле с последующей проверкой на более высоком уровне
- count, exists, find - границы проверок check
  - Многозначный переход автоматически устанавливает amb
  - find перебирает все позиции доски
- is-position-repeated?, is-situation-repeated? (для situation индивидуальные списки для каждого turn-order)
  - Опциональный аргумент zobrist-hash 
    - Если не указан вычисляется хэш всей позиции
    - Нулевое значение игнорируется (если в Мельнице не построено 3 в ряд)
  - Числовая константа - количество совпадений (1 - Го, 2 - Шахматы)
    - По умолчанию равно 1
  - Числовая константа - максимальная глубина списка
    - Короткое Ко: (check (not-situation-repeated? 1 1)) 
- (zobrist-hash var) Добавление к хэшу описания текущей позиции
  - Ключи хэша генерируются модулем board по требованию и хранятся далее
