Модель
------
- Содержит неизменяемые данные
- Однотипные объекты могут наследоваться командной is-a
- Описывает:
  - Доску
    - Список именованных позиций (узлов графа) заданных командой pos
    - Список связей (окрашенных дуг графа) заданных командами link
    - Может использовать многомерные матрицы для более компактного описания
      - Определение измерений (dim) автоматически формирует позиции [1]
      - Определение направлений (dir) автоматически формирует связи [2]
      - Позиции и связи могут быть удалены командой unlink [14]
      - Позиции могут быть связаны вручную [3]
      - Можно определить несколько матриц, связав их между собой [4]
    - Именованные переменные (let) [5]
    - Можно определять гексагональные доски [6]
  - Игроков
    - Имя игрока
    - Описание игровых зон [7]
    - Описание симметрий [8]
    - Отношение симметрии не симметрично [9]
  - Фигуры
    - Содержат код используемый генератором ходов
      - pre - действия выполняемые до генерации хода
      - move - правила генерации хода
      - post - действия выполняемые после генерации хода
    - Содержат описание переменных связанных с экземплярами фигур (атрибуты) [10]
    - Правила выполнения глобальных ходов [11]
  - Игры
    - Содержит описание доски (объект board)
    - Описание игроков [12]
      - Порядок очерёдности хода
      - Начальную расстановку фигур
    - Описание условий завершения игры [13]
- Не содержит данных, необходимых для визуализации
- По запросу, должна предоставляться следующая информация:
  - in-zone? - принадлежность именованной (или текущей) позиции именованной зоне
  - имя позиции, доступной при перемещении по связи (если связь определена)

Состояние
---------
- Содержит все изменяемые данные
- Ведёт дерево состояний с двумя типами узлов
  - Временные узлы, удаляемые по завершении очередного хода
  - Постоянные узлы, формирующие описание партии
- Узлы состояния связаны между собой
  - C родительским связаны все узлы кроме корневого
  - C дочерними узлами, ассоциированно с нотацией соответствующих ходов [15]
- Узел содержит информацию об очерёдности хода
- Узел содержит данные, копируемые при создании дочернего узла:
  - значение переменных (связанных с доской)
  - размещение фигур (экземпляр фигуры может быть получен по имени позиции)
  - значение атрибутов (связанных с экземплярами фигур)
- Могут использоваться следующие оптимизации
  - повторное использование не изменённых данных родительских узлов
  - хранение булевских значений в битовых масках
- По запросу, должна предоставляться следующая информация:
  - is-empty? - проверка пустоты именованной (или текущей) позиции
  - is-friend? - наличие на позиции дружественной фигуры
  - is-enemy? - наличие на позиции враждебной фигуры
  - получение текущего значения глобальной переменной по имени
  - получение текущего значения атрибута фигуры по имени
- Поддерживается изменение данных, выполнением следующих операций:
  - Удаление фигуры с ранее содержавшей её позиции
  - Добавление фигуры на пустую позицию
  - Изменение значения глобальной переменной по имени
  - Изменение значения атрибута фигуры по имени

Генератор ходов
---------------
- Формирует список всех возможных ходов из заданного узла состояния
  - Каждому ходу присваивается уникальное (в рамках родительского узла) имя
  - С именем ассоциирован узел, содержащий состояние после выполнения хода
- Имя хода (нотация) формируется командами log, в процессе генерации хода [16]
- Может поддерживать сбор вспомогательной информации для ИИ
  - Подсказки [17] [18]
  - Рассчёт мобильности [19]
- Рассчёт предикатов is-attacked? и is-defended? может переопределяться [20]

[1] Пример определения трёхмерной доски, не содержащей "j":

(board
   (dim "a-ik-o")
   (dim "a-ik-o")
   (dim "1-3")
)

приводит к тому, что становятся определены aa1, ... ai1, ai2, ai3, ak1, ... oo3

[2] Пример определения связей:

(board
   (dim "a-b")
   (dim "2-1")
   (dir (name n)   0 -1) ; a1 -> a2, b1 -> b2
   (dir (name e)   1  0) ; a1 -> b1, a2 -> b2
   (dir (name s)   0  1) ; a2 -> a1, b2 -> b1
   (dir (name w)  -1  0) ; b1 -> a1, b2 -> a2
)

n, e, s, w - окраска дуг (имена направлений могут повторяться на дугах)

[3] Для определения доски замкнутой в цилиндр можно использовать grid
    с последующим доопределнием недостающих дуг:

(board
   (name chess-board)
   (dim "a-h")
   (dim "8-1")
   (link w a1 h1)
   (link w a2 h2)
   ...
)

[4] Пример определения двух матриц:

(board
   (name a)
   (dim "1-2")
   (dim "a-b")
   (dir (name n) 0 1)
)

(board
   (name b)
   (dim "a-b")
   (dim "2-1")
   (dir (name n) 0 -1)
)

(board
   (is-a a)
   (is-a b)
   (link n a1 1a)
   ...
)

[5] Переменные - часть состояния доски, не связанная с какими либо позициями,
    могут использоваться для подсчёта взятых фигур

(board
   (name go-board)
   (dim "A-HJ-T")
   (dim "19-1")
   (let w-captured 0)
   (let b-captured 0)
)

[6] Пример определения гексогональной доски:

(board
   (dim "a-c")
   (dim "3-1")
   (dir (name nw) -1 -1)
   (dir (name ne)  0 -1)
   (dir (name w)  -1  0)
   (dir (name e)   1  0)
   (dir (name sw)  0  1)
   (dir (name se)  1  1)
   (unlink a1 c3)
)

    a3  b3  c3
  a2  b2  c2
a1  b1  c1
    
[7] Зоны превращения пешек могут быть описаны следующим образом:

(player
   (name White)
   (zone (name promotion) a8 b8 c8 d8 e8 f8 g8 h8)
)

(player
   (name Black)
   (zone (name promotion) a1 b1 c1 d1 e1 f1 g1 h1)
)

[8] Перемещение пешек удобно описывать единообразно (с использованием 
    направления n), транслируя это направление для других игроков, в
    соответсвии с заданными правилами симметрии

(piece
   (name Pawn)
   (move
      (check n)
   )
)

(player
   (name White)
)

(player
   (name Black)
   (sym  n s)
)

(game
   ...
   (players 
      (White ...)
      (Black ...)
   )
)

Для игрока Black, любое упоминание n будет преобразовано в s

[9] Определение симметрии не подразумевает обратного отношения. Это
    позволяет определять более сложные формы симметрии при игре
    4 игроков:

(player
   (name South)
)

(player
   (name West)
   (sym  n e)
)

(player
   (name North)
   (sym  n s)
)

(player
   (name East)
   (sym  n w)
)

[10] Атрибут - часть состояния фигуры (наряду с текущей позицией). Атрибуты
     могут использоваться для реализации сложной логики перемещения:

(piece
   (name Pawn)
   (let not-moved? true)
   (post
      (set! not-moved? false)
   )
   (move
      (check n)
   )
   (move
      (check not-moved?)
      (check n)
      (check empty?)
      (check n)
   )
)

[11] В игре Отелло (современный вариант Реверси) при невозможности выполнения
     хода, игрок пропускает ход. Чтобы игра не была прервана, ход должен быть
     описан явно. Но поскольку ход не связан с какими либо фигурами, он 
     описывается для игрока, а не для фигуры:

(player
   (name othello-invariant)
   (move
      (check (= 0 max-result))
      (log "pass")
   )
)

[12] Пример начальной расстановки фигур в Шахматах:

(game
   (name "Chess")
   (is-a chess-game)
   (board chess-board-8x8)
   (players 
      (White 
         (K e1)
         (Q d1)
         (R a1 h1)
         (N b1 g1)
         (B c1 f1)
         (P a2 b2 c2 d2 e2 f2 g2 h2)
      )
      (Black
         (K e8)
         (Q d8)
         (R a8 h8)
         (N b8 g8)
         (B c8 f8)
         (P a7 b7 c7 d7 e7 f7 g7 h7)
      )
   )
)

[13] В Шашках, невозможность выполнения хода приводит к поражению:

(game
   (name "Checkers")
   (board chess-board-8x8)
   (players 
      (Red (M a1 c1 e1 g1 b2 d2 f2 h2 a3 c3 e3 g3) )
      (White (M b8 d8 f8 h8 a7 c7 e7 g7 b6 d6 f6 h6) )
   )
   (loss
      (check no-moves?)
   )
)

Условие поражения проверяется до генерации хода игрока, но в целях оптимизации
формирует отложенную проверку. Если последующая генерация ходов не сформирует
ни одного хода, отложенная проверка срабатывает, завершая игру поражением.

[14] В Алькуэрке используется квадратная доска, часть диагональных связей
     в которой удалена:

(board
   (dim "a-e")
   (dim "5-1")
   (dir (name n)   0 -1)
   (dir (name e)   1  0)
   (dir (name s)   0  1)
   (dir (name w)  -1  0)
   (dir (name nw) -1 -1)
   (dir (name ne)  1 -1)
   (dir (name sw) -1  1)
   (dir (name se)  1  1)
   (unlink nw b1 a2 nw d1 c2 nw c2 b3 nw b3 a4 
           nw e2 d3 nw d3 c4 nw c4 b5 nw e4 d5 ...) 
)

[15] В Шахматах, из начальной позиции возможны два хода королевской пешкой
     e2 - e3 и e2 - e4. Это означает, что корневой узел может быть связан
     с двумя различными узлами, именам связей с которыми присвоены нотации
     соответствующих ходов

[16] ZSG-нотация, используемая в ZoG, содержит в себе полное описание хода.
     Такого описания достаточно для того чтобы корректно перевести исходное
     состояние в целевое (переместить и удалить фигуры, изменить их тип,
     изменить значения атрибутов и т.п.). Такой подход не работает по двум
     причинам:

1) Для некоторых игр, описание хода в ZSG-нотации может стать недопустимо
   длинным. Например в Го, ход может привести к удалению 361 фигуры. 
   Формирование такого хода приводит к переполнению буфера.

2) Хотя изменение значений атрибутов фиксируется в ZSG (и скрывается при
   выводе в список ходов, доступный пользователю), часть информации в
   нотацию не попадает. Изменения переменных Axiom, связанных с доской
   в ZSG не фиксируются. Если для формирования этих изменений используются
   псевдо-случайные числа, данные будут потеряны. Повторное выполнение хода
   по этому описанию приведёт к формированию другого состояния.

[17] В Го, особенно в серередине партии (тюбан), некоторые взаиморасположения
     фигур (формы) более выгодны чем другие. Сгенерированным ходам (командой
     hint) может присваиваться числовое значение (вес), используемое модулем
     ИИ для разбора более "выгодных" ходов в первую очередь.

[18] В Шахматах, некоторые ходы (например защита от шаха) являются вынужденными
     (форсированными). Такие позиции должны рассматриваться на полную глубину,
     до завершения цепочки форсированных ходов, независимо от установленной
     глубины разбора. Генератор ходов может помечать такие позиции, используя
     команду hint.

[19] Важным для ИИ параметром является "мобильность" - общее количество всех
     возможных ходов из заданной позиции. Генератор ходов может рассчитывать
     мобильность, в качестве побочного эффекта, формируя список ходов.

[20] В некоторых играх, значение предиката is-attacked? может зависеть от того,
     какая фигура атакуется (хамелеон в Ultima) или от того, какая фигура
     ходила последней (шут в Advanced Omega Chess). Очень часто, цель атаки
     находится не на поле завершения хода (Шашки, Ритмомахия). Таким образом,
     для корректного определения значений is-attacked? необходимо выполнить
     полный рассчёт всех возможных ходов, при условии нахождения на позиции
     целевой фигуры (например, для определения возможности прохождения через
     поле при выполнении рокировки, требуется поместить короля на проверяемое 
     поле, рассчитать все ходы противника и проверить не бьётся ли король 
     одним из этих ходов).

     Рассчёт is-defended? должен выполняться на два хода вперёд, поскольку
     для его определения требуется выяснить, какая из фигур противника займёт
     целевое поле и выяснить возможность её атаки (вопрос равноценности обмена
     здесь не рассматривается). Всё ещё больше осложняется, если эти предикаты
     используются в условиях возможности выполнения хода (поскольку ходы 
     необходимо рассчитать для определения значения предикатов, а для рассчёта
     этих ходов, в свою очередь, требуется вычисление предикатов из других
     позиций и т.д.).

     В Bomb Chess, помимо обычного набора фигур, присутсвуют нейтральные
     и неподвижные фигуры (бомбы), расположенные на поле случайным образом.
     При взятии бомбы, удаляются все фигуры, находящиеся в квадрате 3x3,
     включая фигуру выполнившую взятие. Поля вокруг бомб не считаются 
     атакованными (на них может заходить король), пока самой бомбе ничего
     не угрожает. Следующая позиция может быть ошибочно рассмотрена как
     матовая: Black King a8, Bomb b7, White Rook a7. Поскольку бомба
     атакована, поля вокруг неё (включая то, на котором расположилась
     ладья) также находятся под атакой, в результате чего, король не может
     взять ладью и избавиться от шаха. Для более корректного рассчёта,
     следует учитывать то, что статус is-attacked? поля может измениться,
     в результате хода на него.

     К счастью, в большинстве случаев, таких как Шахматы, возможность боя
     поля определяется лишь ходом атакующей фигуры, а предикат is-attacked?
     используется лишь при определении ситуаций шаха/мата и в ходах
     не угрожающих другим фигурам, а is-defended? не используется вовсе. 
     Для таких игр должна поддерживаться возможность упрощённого рассчёта 
     указанных предикатов (следовательно возможность их переопределения 
     на уровне языка).

     Не стоит забывать, что даже в случае Шахмат, упрощённый рассчёт 
     is-attacked? может оказаться некорректным, поскольку атакующая фигура
     может быть связана (вскрытым шахом вражескому королю). В более сложных
     случаях, возможны и вовсе экзотические ситуации (например возможность
     мата ходом короля в "Белорусских шахматах", связанная с более высоким
     приоритетом взятия шашкой, в этой игре, по сравнению с уходом из под
     шаха).
