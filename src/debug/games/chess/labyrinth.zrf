(define pawn-shift (
  $1 (verify empty?)
  (if (in-zone? last-rank)
      (add Queen)
   else
      add
  )
))

(define pawn-jump (
  $1
  (verify empty?)
  (verify (in-zone? third-rank))
  $1 (verify empty?)
  add
))

(define pawn-step (
  $1 (verify enemy?)
  (if (in-zone? last-rank)
      (add Queen)
   else
      add
  )
))

(define en-passant (
  $1
  (verify enemy?)
  (verify last-to?)
  (verify (piece? Pawn))
  capture
  n mark n
  (verify last-from?)
  back
  add
))

(define step (
  $1 (verify not-friend?)
  add
))

(define leap (
  $1 $2 (verify not-friend?)
  add
))

(define slide (
  $1 
  (while empty? add $1)
  (verify not-friend?)
  add
))

(game
  (title "Labyrinth Chess")

  (players White Black)
  (turn-order White Black)

  (board
     (image "images/labyrinth.bmp")
     (grid
         (start-rectangle 2 2 52 52)
         (dimensions
           ("a/b/c/d/e/f/g/h/i/j/k/l" (50 0)) ; files
           ("12/11/10/9/8/7/6/5/4/3/2/1" (0 50)) ; ranks
         )
         (directions 
              (n 0 -1) (s 0 1) (e 1 0) (w -1 0)
              (nw -1 -1) (sw -1 1) (ne 1 -1) (se 1 1)
         )
     )
     (symmetry Black (n s) (s n) (nw sw) (sw nw) (ne se) (se ne) (w w) (e e))
     (zone (name last-rank) (players White)
           (positions a12 b12 c12 d12 e12 f12 g12 h12 i12 j12 k12 l12)
     )
     (zone (name last-rank) (players Black)
           (positions a1 b1 c1 d1 e1 f1 g1 h1 i1 j1 k1 l1)
     )
     (zone (name third-rank) (players White)
           (positions a3 b3 c3 d3 e3 f3 g3 h3 i3 j3 k3 l3)
     )
     (zone (name third-rank) (players Black)
           (positions a10 b10 c10 d10 e10 f10 g10 h10 i10 j10 k10 l10)
     )
  )

  (piece
     (name Pawn)
     (image White "images/wpawn.bmp"
            Black "images/bpawn.bmp")
     (moves
         (pawn-shift n) (pawn-jump n) 
         (pawn-step nw) (pawn-step ne)
         (en-passant e) (en-passant w)
     )
  )
  (piece
     (name Rook)
     (image White "images/wrook.bmp"
            Black "images/brook.bmp")
     (moves
         (slide n) (slide s) (slide w) (slide e)
     )
  )
  (piece
     (name Knight)
     (image White "images/wknight.bmp"
            Black "images/bknight.bmp")
     (moves
         (leap n nw) (leap n ne) (leap s sw) (leap s se)
         (leap w nw) (leap w sw) (leap e ne) (leap e se)
     )
  )
  (piece
     (name Bishop)
     (image White "images/wbishop.bmp"
            Black "images/bbishop.bmp")
     (moves
         (slide nw) (slide sw) (slide ne) (slide se)
     )
  )
  (piece
     (name Queen)
     (image White "images/wqueen.bmp"
            Black "images/bqueen.bmp")
     (moves
         (slide n) (slide s) (slide w) (slide e)
         (slide nw) (slide sw) (slide ne) (slide se)
     )
  )
  (piece
     (name King)
     (image White "images/wking.bmp"
            Black "images/bking.bmp")
     (moves
         (step n) (step s) (step w) (step e)
         (step nw) (step sw) (step ne) (step se)
     )
  )

  (board-setup
    (White 
         (Pawn c2 d2 e2 f2 g2 h2 i2 j2)
         (Rook c1 j1)
         (Knight d1 i1)
         (Bishop e1 h1)
         (Queen f1)
         (King g1)
    )
    (Black 
         (Pawn c11 d11 e11 f11 g11 h11 i11 j11)
         (Rook c12 j12)
         (Knight d12 i12)
         (Bishop e12 h12)
         (Queen f12)
         (King g12)
    )
  )
)
