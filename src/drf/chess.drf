(import "chess-common.drf" chess-game chess-board-8x8)
(import "shatranj.drf" chess-invariant leaper slider knight-piece pawn-piece)

(piece
   (name chess-piece)
   (pre
      (any Pawn)
      (if is-friend?
          (set! is-jumping? false)
      )      
   )
   (post
      (set! not-moved? false)
   )
)

(piece
   (name king-piece)
   (move
      (check not-moved?)
      (check not-attacked?)
      (check e)
      (check is-empty?)
      (check not-attacked?)
      (check e)
      (check is-empty?)
      drop
      (check e)
      (check not-moved?)
      take
      w w
      (log "O-O")
   )
   (move
      (check not-moved?)
      (check not-attacked?)
      (check w)
      (check is-empty?)
      (check not-attacked?)
      (check w)
      (check is-empty?)
      (check not-attacked?)
      (check w)
      (check is-empty?)
      drop
      (check w)
      (check not-moved?)
      take
      e e
      (log "O-O-O")
   )
)

(piece
   (name en-passant)
   (attribute not-moved? true)
   (attribute is-jumping? false)
   (side w e)
   (move
      (log position " x ")
      (check (any side))
      (check is-enemy?)
      (check (is-piece? P))
      (check is-jumping?)
      (check n)
      (check is-empty?)
      (log (order 1) position)
   )
)

(piece
   (name King K)
   (is-a leaper)
   (is-a chess-piece)
   (is-a king-piece)
   (attribute not-moved? true)
   (dir n e s w nw ne se sw)
)

(piece
   (name Bishop B)
   (is-a slider)
   (is-a chess-piece)
   (dir nw ne se sw)
)

(piece
   (name Knight N)
   (is-a chess-piece)
   (is-a knight-piece)
   (move
      (check (any first-dir))
      (check (any second-dir))
   )
)

(piece
   (name Rook R)
   (is-a slider)
   (is-a chess-piece)
   (attribute not-moved? true)
   (dir n e s w)
)

(piece
   (name Queen Q)
   (is-a slider)
   (is-a chess-piece)
   (dir n e s w nw ne se sw)
)

(piece
   (name Pawn P)
   (is-a chess-piece)
   (is-a chess-invariant)
   (is-a pawn-piece)
   (is-a en-passant)
   (post
      (if (in-zone? promotion)
          (piece-type (any Q R B N))
          (log (order 3) " = " piece-type)
      )
   )
   (move
      (check not-moved?)
      (check n)
      (check is-empty?)
      (check n)
      (check is-empty?)
      (set! is-jumping? true)
   )
)

(player
   (name White)
   (zone (name promotion) a8 b8 c8 d8 e8 f8 g8 h8)
)

(player
   (name Black)
   (sym n  s)
   (sym s  n)
   (sym nw sw)
   (sym ne se)
   (sym sw nw)
   (sym se ne)
   (zone (name promotion) a1 b1 c1 d1 e1 f1 g1 h1)
)

(game
   (name "Chess")
   (is-a chess-game)
   (board chess-board-8x8)
   (players 
      (White 
         (K e1)
         (Q d1)
         (R a1 h1)
         (N b1 g1)
         (B c1 f1)
         (P a2 b2 c2 d2 e2 f2 g2 h2)
      )
      (Black
         (K e8)
         (Q d8)
         (R a8 h8)
         (N b8 g8)
         (B c8 f8)
         (P a7 b7 c7 d7 e7 f7 g7 h7)
      )
   )
   (draw
      (order 1)
      (check no-moves?)
   )
)
