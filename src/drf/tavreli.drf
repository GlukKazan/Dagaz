(define check-promoted
  (if is-promoted?
      (if (= Pawn-Rook top-piece-type)
          (set! top-piece-type Rook)
      )
      (if (= Pawn-Knight top-piece-type)
          (set! top-piece-type Knight)
      )
      (if (= Pawn-Bishop top-piece-type)
          (set! top-piece-type Bishop)
      )
      (if (= Pawn-Queen top-piece-type)
          (set! top-piece-type Queen)
      )
      (if (= Pawn-King top-piece-type)
          (set! top-piece-type Helg)
      )
  )
)

(define (check-source piece-type)
  (check not-empty?)
  (if (is-enemy? down)
      (set! ai.weight -1000)
      (set! ai.hint "for-stalemate-prevent-only")
  )
  (let my-friend? is-friend?)
  (let top-piece-type get-piece-type)
  check-promoted
  (take-piece-to-head current-pieces)
  (while (and up not-empty?)
     (set! my-friend? is-friend?)
     (set! top-piece-type get-piece-type)
     check-promoted
     (take-piece-to-tail current-pieces)
  )
  (check my-friend?)
  (check (= top-piece-type piece-type))
)

(define check-destination
  (let not-my-friend? not-friend?)
  (if not-empty?
     (while (and up not-empty?)
        (set! not-my-friend? not-friend?)
        (set! is-promoted? false)
        (piece-is? King
           (set! ai.weight 1000)
           (set! ai.hint "king-captured")
        )
     )
  )
  (check not-my-friend?)
  (check is-empty?)
  (drop-pieces current-pieces)
  (if (in-zone? promotion)
      (set! is-promoted? true)
  )
  add-move
)

(define set-moved
  (set! is-moved? true)
)

(define (leap piece-type direction)
  (check-source piece-type)
  (check direction)
  check-destination
)

(define (slide piece-type direction)
  (check-source piece-type)
  (check direction)
  (while is-empty?
     (drop-pieces current-pieces)
     add-move
     (check direction)
  )
  (check not-empty?)
  check-destination
)

(define (pawn-move piece-type)
  (check-source piece-type)
  (check n)
  (check is-empty?)
  (drop-pieces current-pieces)
  (if (in-zone? promotion)
      (set! is-promoted? true)
  )
  add-move
)

(define (pawn-capture piece-type direction)
  (check-source piece-type)
  (check direction)
  (check not-empty?)
  check-destination
)

(define pawn-jump
  (check (not is-moved?))
  (set! turn-jumped turn-number)
  (check-source Pawn)
  (check n)
  (check is-empty?)
  (check n)
  (check is-empty?)
  (drop-pieces current-pieces)
  add-move
)

(define (en-passant piece-type direction)
  (check-source piece-type)
  (check direction)
  (check is-enemy?)
  (check (= 1 (- turn-number turn-jumped)))
  capture
  (check n)
  (check is-empty?)
  (drop-pieces current-pieces)
  add-move
)

(define O-O
  (check (not is-moved?))
  (check (not-attacked? King))
  (check-source King)
  (check w)
  (check is-empty?)
  (check (not-attacked? King))
  (check w)
  (check is-empty?)
  (check (not-attacked? King))
  (drop-pieces current-pieces)
  (check w)
  (check (not is-moved?))
  (set! is-moved? true)
  (check-source Rook)
  e e
  (drop-pieces current-pieces)
  add-move
)

(define O-O-O
  (check (not is-moved?))
  (check (not-attacked? King))
  (check-source King)
  (check e)
  (check is-empty?)
  (check (not-attacked? King))
  (check e)
  (check is-empty?)
  (check (not-attacked? King))
  (drop-pieces current-pieces)
  (check e)
  (check is-empty?)
  (check e)
  (check (not is-moved?))
  (set! is-moved? true)
  (check-source Rook)
  w w w
  (drop-pieces current-pieces)
  add-move
)

(define invariant
  (check 
      (not-exists?
         (check is-friend?)
         (check (piece-is? King))
         (check is-attacked?)
      )
  )
)

(define goals
  (check-loss
      (priority 1)
      (and
           (exists?
              (check is-friend?)
              (check (piece-is? King))
              (check is-attacked?)
           )
           (not-exists? try-moves)
      )
  )
  (check-draw
      (priority 0)
      (is-situation-repeated? 2)
  )
  (check-draw
      (priority 0)
      (not-exists? try-moves)
  )
)

(game
   (title "Tavreli")
   (turn-order White Black)
   (board
      (grid (dimensions "a_h" "8_1" "0_31")
            (direction (name up)    0  0  1)
            (direction (name down)  0  0 -1)
            (direction (name n)     0 -1)
            (direction (name s)     0  1)
            (direction (name e)     1  0)
            (direction (name w)    -1  0)
            (direction (name nw)   -1 -1)
            (direction (name ne)    1 -1)
            (direction (name sw)   -1  1)
            (direction (name se)    1  1)
            (direction (name nnw)  -1 -2)
            (direction (name nne)   1 -2)
            (direction (name een)   2 -1)
            (direction (name ees)   2  1)
            (direction (name sse)   1  2)
            (direction (name ssw)  -1  2)
            (direction (name wwn)  -2 -1)
            (direction (name wws)  -2  1)
      )
      (zone (name promotion)
            (players White)
            (positions a8 b8 c8 d8 e8 f8 g8 h8)
      )
      (zone (name promotion)
            (players Black)
            (positions a1 b1 c1 d1 e1 f1 g1 h1)
      )
      (symmetry (players Black) 
                (n s) (nw sw) (ne se) (w e)
                (s n) (sw nw) (se ne) (e w)
      )
   )
   (pieces
      (pre  goals)
      (post set-moved)
      (post invariant)
      (piece 
            (name Pawn)
            (attribute (name is-moved?) false)
            (attribute (name is-promoted?) false)
            (attribute (name turn-jumped))
            (piece (name Pawn-Rook))
            (piece (name Pawn-Knight))
            (piece (name Pawn-Bishop))
            (piece (name Pawn-Queen))
            (piece (name Pawn-King))
            (moves pawn-jump)
      )
      (piece (name Rook)
            (attribute (name is-moved?) false)
      )
      (piece (name Knight))
      (piece (name Bishop))
      (piece (name Queen))
      (piece (name Helg))
      (piece (name King)
            (attribute (name is-moved?) false)
            (moves O-O O-O-O)
      )
      (moves
            (slide Rook n)(slide Rook s)(slide Rook w)(slide Rook e)
            (leap Knight nnw)(leap Knight nne)(leap Knight een)(leap Knight ees)
            (leap Knight sse)(leap Knight ssw)(leap Knight wwn)(leap Knight wws)
            (slide Bishop nw)(slide Bishop ne)(slide Bishop sw)(slide Bishop se)
            (slide Queen n)(slide Queen s)(slide Queen w)(slide Queen e)
            (slide Queen nw)(slide Queen ne)(slide Queen sw)(slide Queen se)
            (leap King n)(leap King s)(leap King w)(leap King e)
            (leap King nw)(leap King ne)(leap King sw)(leap King se)
            (slide Helg n)(slide Helg s)(slide Helg w)(slide Helg e)
            (slide Helg nw)(slide Helg ne)(slide Helg sw)(slide Helg se)
            (leap Helg nnw)(leap Helg nne)(leap Helg een)(leap Helg ees)
            (leap Helg sse)(leap Helg ssw)(leap Helg wwn)(leap Helg wws)
            (pawn-move Pawn)(pawn-capture Pawn nw)(pawn-capture Pawn ne)
            (en-passant Pawn w)(en-passant Pawn w)
      )
   )
   (setup
      (White
            (Pawn-Rook a2 h2)
            (Pawn-Knight b2 g2)
            (Pawn-Bishop c2 f2)
            (Pawn-Queen d2)
            (Pawn-King e2)
            (Knight b1 g1)
            (Bishop c1 f1)
            (Rook a1 h1)
            (Queen d1)
            (King e1)
      )
      (Black
            (Pawn-Rook a7 h7)
            (Pawn-Knight b7 g7)
            (Pawn-Bishop c7 f7)
            (Pawn-Queen d7)
            (Pawn-King e7)
            (Knight b8 g8)
            (Bishop c8 f8)
            (Rook a8 h8)
            (Queen d8)
            (King e8)
      )
   )
)
